{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","user","id","name","email","CardList","users","map","SearchBox","placeholder","handleChange","onChange","type","App","e","setState","searchInput","target","value","state","fetch","then","response","json","this","filteredUsers","filter","monster","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAceA,EAXF,SAACC,GAAD,OACT,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,KAAKC,GAArC,eAEP,6BAAKL,EAAMI,KAAKE,OAChB,4BAAIN,EAAMI,KAAKG,YCIRC,EAVE,SAACR,GACd,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,MAAMC,KAAI,SAACN,GAAD,OACb,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,UCMjBM,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC9B,OACI,uBACIZ,UAAU,SACVa,SAAUD,EACVE,KAAK,SACLH,YAAaA,MCkCVI,E,kDArCX,aAAe,IAAD,8BACV,gBAaJH,aAAe,SAACI,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACTb,MAAO,GACPU,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACf,GAAD,OAAW,EAAKS,SAAS,CAAET,MAAOA,S,oBAOhD,WAAU,IAAD,EAC0BkB,KAAKL,MAA5Bb,EADH,EACGA,MAAOU,EADV,EACUA,YACTS,EAAgBnB,EAAMoB,QAAO,SAACC,GAAD,OAC/BA,EAAQxB,KAAKyB,cAAcC,SAASb,EAAYY,kBAGpD,OACI,sBAAK9B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIW,YAAY,kBACZC,aAAcc,KAAKd,eAEvB,cAAC,EAAD,CAAUJ,MAAOmB,W,GAhCfK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.14501f0f.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nconst Card = (props) => (\n    <div className=\"card-container\">\n        <img\n            alt=\"monster\"\n            src={`https://robohash.org/${props.user.id}?set=set2`}\n        />\n        <h1>{props.user.name}</h1>\n        <p>{props.user.email}</p>\n    </div>\n)\n\nexport default Card\n","import React from 'react'\nimport './card-list.styles.css'\nimport Card from '../card/card.js'\n\nconst CardList = (props) => {\n    return (\n        <div className=\"card-list\">\n            {props.users.map((user) => (\n                <Card key={user.id} user={user} />\n            ))}\n        </div>\n    )\n}\n\nexport default CardList\n","import React from 'react'\nimport './search-box.styles.css'\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n    return (\n        <input\n            className=\"search\"\n            onChange={handleChange}\n            type=\"search\"\n            placeholder={placeholder}\n        />\n    )\n}\n\nexport default SearchBox\n","import React, { Component } from 'react'\nimport './App.css'\nimport CardList from './components/card-list/card-list'\nimport SearchBox from './components/search-box/search-box'\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            users: [],\n            searchInput: '',\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then((response) => response.json())\n            .then((users) => this.setState({ users: users }))\n    }\n\n    handleChange = (e) => {\n        this.setState({ searchInput: e.target.value })\n    }\n\n    render() {\n        const { users, searchInput } = this.state\n        const filteredUsers = users.filter((monster) =>\n            monster.name.toLowerCase().includes(searchInput.toLowerCase())\n        )\n\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox\n                    placeholder=\"Search Monsters\"\n                    handleChange={this.handleChange}\n                />\n                <CardList users={filteredUsers}></CardList>\n            </div>\n        )\n    }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}